/**
 * Script pour valider les calculs RQAP avec le calculateur officiel MFQ
 */

import { rqapValidationTests, runRqapValidationTest } from './RqapValidationTests'

interface ValidationReport {
  timestamp: string
  summary: {
    total: number
    passed: number
    warnings: number
    failed: number
  }
  results: Array<{
    testId: string
    taxYear: number
    expected: number
    actual: number
    difference: number
    percentageDifference: number
    status: 'PASS' | 'WARN' | 'FAIL'
    threshold: number
  }>
}

export async function runAllRqapValidation(): Promise<ValidationReport> {
  console.log('üöÄ D√©marrage validation RQAP avec calculateur MFQ...\n')
  
  const results = []
  let passed = 0
  let warnings = 0
  let failed = 0
  
  for (const test of rqapValidationTests) {
    console.log(`‚è≥ Test: ${test.description}`)
    
    const result = await runRqapValidationTest(test)
    results.push(result)
    
    // Afficher le r√©sultat
    const statusIcon = result.status === 'PASS' ? '‚úÖ' : 
                      result.status === 'WARN' ? '‚ö†Ô∏è' : '‚ùå'
    
    console.log(`${statusIcon} ${result.status} - Attendu: ${result.expected}$, Obtenu: ${result.actual}$, √âcart: ${result.difference.toFixed(2)}$`)
    
    // Compter les statuts
    if (result.status === 'PASS') passed++
    else if (result.status === 'WARN') warnings++
    else failed++
    
    console.log('')
  }
  
  // Afficher le r√©sum√©
  console.log('üìä R√âSUM√â VALIDATION RQAP:')
  console.log(`Total tests: ${results.length}`)
  console.log(`‚úÖ R√©ussites: ${passed}`)
  console.log(`‚ö†Ô∏è Avertissements: ${warnings}`)
  console.log(`‚ùå √âchecs: ${failed}`)
  
  if (failed === 0 && warnings === 0) {
    console.log('\nüéâ EXCELLENT! Tous les tests RQAP sont align√©s avec le calculateur MFQ!')
  } else if (failed === 0) {
    console.log('\nüëç BIEN! Tous les tests RQAP passent, quelques avertissements mineurs.')
  } else {
    console.log('\n‚ö†Ô∏è ATTENTION! Certains tests RQAP √©chouent. V√©rification n√©cessaire.')
  }
  
  const report: ValidationReport = {
    timestamp: new Date().toISOString(),
    summary: {
      total: results.length,
      passed,
      warnings,
      failed
    },
    results
  }
  
  return report
}

// Ex√©cution standalone si appel√© directement
if (require.main === module) {
  runAllRqapValidation()
    .then(report => {
      // √âcrire le rapport en fichier JSON
      const fs = require('fs')
      const path = require('path')
      
      const reportPath = path.join(process.cwd(), 'rqap-validation-report.json')
      fs.writeFileSync(reportPath, JSON.stringify(report, null, 2))
      
      console.log(`\nüìÑ Rapport d√©taill√© sauv√©: ${reportPath}`)
    })
    .catch(error => {
      console.error('‚ùå Erreur validation RQAP:', error)
      process.exit(1)
    })
}